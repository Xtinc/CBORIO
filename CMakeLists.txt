cmake_minimum_required(VERSION 3.11)
project(BAGREC LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
    add_compile_options(-Wall -Wextra -pedantic)
    add_link_options(-export-dynamic)
    add_compile_definitions(IS_GNU_CXX_COMPILER)
endif()
if(CMAKE_CXX_COMPILER_ID MATCHES MSVC)
    add_compile_options(/W4)
    add_compile_definitions(IS_MSVC_CXX_COMPILER)
    add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
    #add_compile_definitions(MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS=0)
endif()

message(STATUS "---------------------------")
message(STATUS "Current Project: ${PROJECT_NAME}")
option(ENABLE_UNIT_TESTS "Enable unit tests" ON)
option(ENABLE_LCOV "Enable code coverage tests" OFF)
message(STATUS "Enable gtesting: ${ENABLE_UNIT_TESTS}")
message(STATUS "Enable coverage: ${ENABLE_LCOV}")
add_subdirectory(vendor/IO_CBOR)
add_subdirectory(vendor/CR_REFL)

aux_source_directory(src SRCLISTS)
add_library(${CMAKE_PROJECT_NAME} ${SRCLISTS})
target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC inc)
if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
    target_link_libraries(${CMAKE_PROJECT_NAME} PUBLIC CBOR REFL dl)
else()
    target_link_libraries(${CMAKE_PROJECT_NAME} PUBLIC CBOR REFL)
endif()

if(ENABLE_UNIT_TESTS)
    enable_testing()
    add_subdirectory(test)
endif()
message(STATUS "---------------------------")