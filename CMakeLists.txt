cmake_minimum_required(VERSION 3.11)
project(cbor_test LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
add_compile_options(-Wall -Wextra -pedantic)

add_subdirectory(IO_CBOR)
option(ENABLE_UNIT_TESTS "Enable unit tests" ON)
message(STATUS "Enable testing: ${ENABLE_UNIT_TESTS}")
option(ENABLE_LCOV "Enable code coverage tests" OFF)
message(STATUS "Enable Lcov: ${ENABLE_LCOV}")

if(ENABLE_UNIT_TESTS)
    message(STATUS "---------------------------")
    message(STATUS "-- Gtest Configure")
    find_package(GTest CONFIG REQUIRED)
    if(GTest_FOUND)
        message(STATUS "--Include Directories")
        foreach(include_dir ${GTEST_INCLUDE_DIRS})
            message(STATUS "    ${include_dir}")
        endforeach()
        message(STATUS "--Library Directories")
            foreach(library_dir ${GTEST_LIBRARIES})
            message(STATUS "    ${library_dir}")
        endforeach()
    else()
        message(FATAL_ERROR "Failed to find required depedency: gtest.")
    endif()
    include(GoogleTest)
    enable_testing()
    add_executable(${PROJECT_NAME} test.cpp)
    target_link_libraries(${PROJECT_NAME} PRIVATE cborio GTest::gtest)
    gtest_discover_tests(${PROJECT_NAME})
    if(ENABLE_LCOV)
        message(STATUS "---------------------------")
        message(STATUS "-- lcov Configure")
        find_program(LCOV_BIN lcov)
        if(LCOV_BIN MATCHES "lcov$")
            message(STATUS "lcov found in ${LCOV_BIN}")
        else()
            message(FATAL_ERROR "lcov required, but not found!")
        endif()
        if(CMAKE_BUILD_TYPE MATCHES Debug)
            include(CodeCoverage.cmake)
            APPEND_COVERAGE_COMPILER_FLAGS()
            setup_target_for_coverage_lcov(NAME coverage EXECUTABLE ctest test EXCLUDE "/usr/*" DEPENDENCIES ${PROJECT_NAME})
        endif()
    endif()
    message(STATUS "---------------------------")
endif()